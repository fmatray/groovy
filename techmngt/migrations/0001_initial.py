# Generated by Django 2.1.4 on 2018-12-20 11:31

import django.db.models.deletion
import simple_history.models
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('funcmngt', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AsynchronousFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'Asynchronous Flows',
            },
        ),
        migrations.CreateModel(
            name='BatchFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('batch_name', models.CharField(default='', max_length=200, unique=True, verbose_name='Batch name')),
                ('ord_name', models.CharField(default='', max_length=200, unique=True, verbose_name='Ord. name')),
                ('script_name', models.CharField(default='', max_length=200, unique=True, verbose_name='Script name')),
                ('input_flow', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_input_flow', to='techmngt.AsynchronousFlow', verbose_name='Input Flow')),
                ('output_flow', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_output_flow', to='techmngt.AsynchronousFlow', verbose_name='Output Flow')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAsynchronousFlow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical asynchronous flow',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBatchFlow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('batch_name', models.CharField(db_index=True, default='', max_length=200, verbose_name='Batch name')),
                ('ord_name', models.CharField(db_index=True, default='', max_length=200, verbose_name='Ord. name')),
                ('script_name', models.CharField(db_index=True, default='', max_length=200, verbose_name='Script name')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('input_flow', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='techmngt.AsynchronousFlow', verbose_name='Input Flow')),
                ('output_flow', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='techmngt.AsynchronousFlow', verbose_name='Output Flow')),
            ],
            options={
                'verbose_name': 'historical batch flow',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNetworkFlow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('source_nat_ip', models.CharField(blank=True, max_length=64, verbose_name='Source NAT IP')),
                ('destination_nat_ip', models.CharField(blank=True, max_length=64, verbose_name='Destination NAT IP')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical network flow',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProtocol',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('type', models.CharField(choices=[('Asynchronous', 'Asynchronous'), ('Synchronous', 'Synchronous')], default='Synchronous', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical protocol',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('dns', models.CharField(blank=True, max_length=512, verbose_name='DNS')),
                ('ip', models.CharField(blank=True, max_length=64, verbose_name='IP')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical server',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServerType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical server type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTechFlow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('subfunc_flow', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='funcmngt.SubFuncFlow', verbose_name='Functional Sub Flow')),
            ],
            options={
                'verbose_name': 'historical tech flow',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalURIFlow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('uri', models.CharField(max_length=512, verbose_name='URI')),
                ('method', models.CharField(choices=[('HEAD', 'HEAD'), ('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], default='', max_length=32, verbose_name='method')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical uri flow',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='NetworkFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('source_nat_ip', models.CharField(blank=True, max_length=64, verbose_name='Source NAT IP')),
                ('destination_nat_ip', models.CharField(blank=True, max_length=64, verbose_name='Destination NAT IP')),
            ],
            options={
                'verbose_name_plural': 'Network',
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('type', models.CharField(choices=[('Asynchronous', 'Asynchronous'), ('Synchronous', 'Synchronous')], default='Synchronous', max_length=20)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'Protocols',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('dns', models.CharField(blank=True, max_length=512, verbose_name='DNS')),
                ('ip', models.CharField(blank=True, max_length=64, verbose_name='IP')),
            ],
            options={
                'verbose_name_plural': 'Servers',
            },
        ),
        migrations.CreateModel(
            name='ServerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'Server Type',
            },
        ),
        migrations.CreateModel(
            name='TechFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('subfunc_flow', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='techflow_subflow', to='funcmngt.SubFuncFlow', verbose_name='Functional Sub Flow')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='URIFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('To do', 'To do'), ('Doing', 'Doing'), ('Done', 'Done'), ('Abort', 'Abort'), ('Retired', 'Retired')], default='Draft', max_length=20)),
                ('uri', models.CharField(max_length=512, verbose_name='URI')),
                ('method', models.CharField(choices=[('HEAD', 'HEAD'), ('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], default='', max_length=32, verbose_name='method')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'URI Flows',
            },
        ),
        migrations.AddField(
            model_name='server',
            name='server_type',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_servertype', to='techmngt.ServerType', verbose_name='Server Type'),
        ),
        migrations.AddField(
            model_name='server',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='networkflow',
            name='destination_server',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destination_server_env', to='techmngt.Server', verbose_name='Destination server'),
        ),
        migrations.AddField(
            model_name='networkflow',
            name='source_server',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_server_env', to='techmngt.Server', verbose_name='Source server'),
        ),
        migrations.AddField(
            model_name='networkflow',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='historicalserver',
            name='server_type',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='techmngt.ServerType', verbose_name='Server Type'),
        ),
        migrations.AddField(
            model_name='historicalnetworkflow',
            name='destination_server',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='techmngt.Server', verbose_name='Destination server'),
        ),
        migrations.AddField(
            model_name='historicalnetworkflow',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalnetworkflow',
            name='source_server',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='techmngt.Server', verbose_name='Source server'),
        ),
    ]
