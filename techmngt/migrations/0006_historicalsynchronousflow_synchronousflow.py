# Generated by Django 2.1.4 on 2019-01-15 14:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields
import markdownx.models
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('funcmngt', '0004_auto_20190114_1655'),
        ('techmngt', '0005_auto_20190114_1655'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSynchronousFlow',
            fields=[
                ('techflow_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='techmngt.TechFlow')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Name')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('On going', 'On going'), ('Released', 'Released'), ('Retired', 'Retired'), ('Abort', 'Abort')], default='Draft', max_length=20)),
                ('description', django_cryptography.fields.encrypt(markdownx.models.MarkdownxField(help_text="<a href='https://en.wikipedia.org/wiki/Markdown'>You can use Markdown</a>", null=True, verbose_name='Description'))),
                ('documentation', django_cryptography.fields.encrypt(models.URLField(blank=True, null=True, verbose_name='Documentation'))),
                ('comment', django_cryptography.fields.encrypt(markdownx.models.MarkdownxField(blank=True, help_text="<a href='https://en.wikipedia.org/wiki/Markdown'>You can use Markdown</a>", verbose_name='Comment'))),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.ContentType')),
                ('protocol', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'status__in': ('On going', 'Released'), 'type': 'Synchronous'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='techmngt.Protocol', verbose_name='Protocol')),
                ('subfunc_flow', models.ForeignKey(blank=True, db_constraint=False, default=None, limit_choices_to={'status__in': ('On going', 'Released')}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='funcmngt.SubFuncFlow', verbose_name='Sub Functional Flow')),
            ],
            options={
                'verbose_name': 'historical Synchronous',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SynchronousFlow',
            fields=[
                ('techflow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='techmngt.TechFlow')),
                ('protocol', models.ForeignKey(limit_choices_to={'status__in': ('On going', 'Released'), 'type': 'Synchronous'}, on_delete=django.db.models.deletion.PROTECT, related_name='synchronousflow_protocol', to='techmngt.Protocol', verbose_name='Protocol')),
            ],
            options={
                'verbose_name': 'Synchronous',
                'verbose_name_plural': 'Synchronous',
            },
            bases=('techmngt.techflow',),
        ),
    ]
