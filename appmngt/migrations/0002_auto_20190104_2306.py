# Generated by Django 2.1.5 on 2019-01-04 23:06

import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appmngt', '0001_initial'),
        ('techmngt', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.AddField(
            model_name='environment',
            name='servers',
            field=models.ManyToManyField(blank=True, default=None, limit_choices_to={'status__in': ('On going', 'Released')}, related_name='env_servers', to='techmngt.Server', verbose_name='Servers'),
        ),
        migrations.AddField(
            model_name='environment',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='application',
            name='partner',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to={'status__in': ('On going', 'Released')}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_partner', to='appmngt.Partner', verbose_name='Partner'),
        ),
        migrations.AddField(
            model_name='application',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='application',
            name='univers',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to={'status__in': ('On going', 'Released')}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_univers', to='appmngt.Univers', verbose_name='Univers'),
        ),
        migrations.AlterUniqueTogether(
            name='environment',
            unique_together={('name', 'application')},
        ),
    ]
